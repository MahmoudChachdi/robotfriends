{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4NAeeA,EAbH,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACC,sBAAKC,UAAW,uDAAhB,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACC,6BAAKF,IACL,4BAAIC,WCmBOK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIjB,OACC,qBAAMJ,UAAU,MAAhB,SAEEI,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CACCC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,cCEVW,EAhBG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKX,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCKCI,EAXA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,SAAU,SAAWC,OAAQ,kBAAoBC,OAAO,SAArE,SAEEJ,EAAMK,YC6BKC,G,wDAhCd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACAO,MAAS,CACbC,UAAW,GAHK,E,qDASlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAK1B,WACC,OAAIG,KAAKJ,MAAMC,SACP,uDAGDG,KAAKX,MAAMK,a,GArBMQ,cCmDZC,E,kDA7Cb,aAAe,IAAD,8BACb,gBAgBFC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAhBvC,EAAKX,MAAQ,CACZnB,OAAO,GACPM,YAAY,IAJA,E,qDASd,WAAqB,IAAD,OACnByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAQ,EAAKX,SAAS,CAACxB,OAAOmC,S,oBAWvC,WACC,MAA8BZ,KAAKJ,MAA5BnB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACT8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACpC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAErD,OAAQvC,EAAOyC,OAGb,sBAAK7C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAW3B,OAAQoC,WAPxB,mD,GA9BeX,aCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCAdO,IAASC,OACT,cAAC,EAAD,IACAC,SAASC,eAAe,SAMxBX,M","file":"static/js/main.fb49b528.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =({\tname,\temail,\tid }) => {\r\n\treturn (\r\n\t\t<div className= 'tc  bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots'\tsrc={`https://robohash.org/${id}?size=250x250`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Card; ","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n\t\r\n\r\n\t\treturn(\r\n\t\t\t<div  className='tc '> \r\n\t\t\t\t{\r\n\t\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\t\tKey={i} \r\n\t\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style={{overflow: 'scroll' , border: '1px solid black' , height:'800px'}}>\r\n\r\n\t\t\t{props.children}\r\n\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll;","import React , {Component} from 'react';\r\n\r\n\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\t\tthis.state =  {\r\n\t\t\t\thasError : false\r\n\t\t\t}\r\n\t}\r\n\r\n \r\n\r\n \tcomponentDidCatch(error, info) {\r\n \t\tthis.setState({hasError: true})\r\n\r\n\r\n \t}\r\n\r\n \trender(){\r\n \t\tif (this.state.hasError) {\r\n \t\t\treturn <h1> THATS NOT GOOOOOOOD </h1>\r\n \t\t}\r\n\r\n \t\treturn this.props.children\t\r\n\r\n\r\n \t}\r\n\r\n\t\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ErrorBoundry;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll.js';\r\nimport '../components/App.css'; \r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\t\tconstructor() {\r\n\t\t\tsuper()\r\n\t\t\tthis.state = {\r\n\t\t\t\trobots:[],\r\n\t\t\t\tsearchfield:''\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t\t.then(response=>response.json())\r\n\t\t\t\t.then(users=>{this.setState({robots:users})});\r\n\r\n\r\n\r\n\t\t}\r\n\tOnSearchChange = (event) => {\r\n\t\tthis.setState({searchfield:event.target.value})\r\n\r\n\t}\r\n\r\n\t\r\n\trender() {\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())  \r\n\t\t})\r\n\t\t return !robots.length ?\r\n\t\t <h1> PLEASE WAIT </h1> :\r\n\t\t  (\r\n\t\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t\t<h1 className='f1'> ROBOTFRIENDS</h1>\r\n\t\t\t\t\t\t<SearchBox searchChange={this.OnSearchChange}/>\r\n\t\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t\t<CardList  robots={filteredRobots}/>\r\n\t\t\t\t\t\t\t</ErrorBoundry>\t\r\n\t\t\t\t\t\t</Scroll>\t\r\n\t\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default App ;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport './components/index.css';\n\nReactDOM.render(\n<App/>,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}